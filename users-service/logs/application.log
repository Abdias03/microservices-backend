{"@timestamp":"2025-06-02T23:25:14.3996725-06:00","level":"INFO","logger_name":"com.marketplace.users.UsersServiceApplication","message":"Starting UsersServiceApplication using Java 17.0.11 with PID 12404 (C:\\Users\\103300781\\Documents\\Abdias_Archivos\\Microservicios\\proyecto1\\microservices-backend\\users-service\\target\\classes started by AbdiasMoralesSalazar in C:\\Users\\103300781\\Documents\\Abdias_Archivos\\Microservicios\\proyecto1\\microservices-backend\\users-service)"}
{"@timestamp":"2025-06-02T23:25:14.40667-06:00","level":"INFO","logger_name":"com.marketplace.users.UsersServiceApplication","message":"No active profile set, falling back to 1 default profile: \"default\""}
{"@timestamp":"2025-06-02T23:25:14.4588033-06:00","level":"INFO","logger_name":"org.springframework.boot.devtools.restart.ChangeableUrls","message":"The Class-Path manifest attribute in C:\\Users\\103300781\\.m2\\repository\\com\\oracle\\database\\jdbc\\ojdbc11\\21.9.0.0\\ojdbc11-21.9.0.0.jar referenced one or more files that do not exist: file:/C:/Users/103300781/.m2/repository/com/oracle/database/jdbc/ojdbc11/21.9.0.0/oraclepki.jar"}
{"@timestamp":"2025-06-02T23:25:14.4588033-06:00","level":"INFO","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable"}
{"@timestamp":"2025-06-02T23:25:14.4588033-06:00","level":"INFO","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'"}
{"@timestamp":"2025-06-02T23:25:15.520094-06:00","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode."}
{"@timestamp":"2025-06-02T23:25:15.6426178-06:00","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 116 ms. Found 1 JPA repository interface."}
{"@timestamp":"2025-06-02T23:25:15.878272-06:00","level":"INFO","logger_name":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=cabed883-ec52-3b8f-901a-f3742f5fcd4d"}
{"@timestamp":"2025-06-02T23:25:16.1270756-06:00","level":"WARN","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead."}
{"@timestamp":"2025-06-02T23:25:16.1290432-06:00","level":"WARN","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies."}
{"@timestamp":"2025-06-02T23:25:16.4910353-06:00","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8081 (http)"}
{"@timestamp":"2025-06-02T23:25:16.4990025-06:00","level":"INFO","logger_name":"org.apache.coyote.http11.Http11NioProtocol","message":"Initializing ProtocolHandler [\"http-nio-8081\"]"}
{"@timestamp":"2025-06-02T23:25:16.5010094-06:00","level":"INFO","logger_name":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2025-06-02T23:25:16.5010094-06:00","level":"INFO","logger_name":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/10.1.20]"}
{"@timestamp":"2025-06-02T23:25:16.5545995-06:00","level":"INFO","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2025-06-02T23:25:16.5545995-06:00","level":"INFO","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 2095 ms"}
{"@timestamp":"2025-06-02T23:25:16.6606257-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Starting..."}
{"@timestamp":"2025-06-02T23:25:16.8517646-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA"}
{"@timestamp":"2025-06-02T23:25:16.8527672-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Start completed."}
{"@timestamp":"2025-06-02T23:25:16.8607644-06:00","level":"INFO","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'"}
{"@timestamp":"2025-06-02T23:25:17.0344793-06:00","level":"INFO","logger_name":"org.hibernate.jpa.internal.util.LogHelper","message":"HHH000204: Processing PersistenceUnitInfo [name: default]"}
{"@timestamp":"2025-06-02T23:25:17.0792606-06:00","level":"INFO","logger_name":"org.hibernate.Version","message":"HHH000412: Hibernate ORM core version 6.4.4.Final"}
{"@timestamp":"2025-06-02T23:25:17.1112701-06:00","level":"INFO","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","message":"HHH000026: Second-level cache disabled"}
{"@timestamp":"2025-06-02T23:25:17.3024286-06:00","level":"INFO","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","message":"No LoadTimeWeaver setup: ignoring JPA class transformer"}
{"@timestamp":"2025-06-02T23:25:17.3525842-06:00","level":"WARN","logger_name":"org.hibernate.orm.deprecation","message":"HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)"}
{"@timestamp":"2025-06-02T23:25:18.0362273-06:00","level":"INFO","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)"}
{"@timestamp":"2025-06-02T23:25:18.0812276-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create table usuarios (\r\n        id bigint generated by default as identity,\r\n        contrasena varchar(255),\r\n        correo varchar(255),\r\n        nombre varchar(255),\r\n        telefono varchar(255),\r\n        tipo varchar(255) not null check (tipo in ('CLIENTE','PROVEEDOR','CREADOR','ADMIN')),\r\n        verificado boolean,\r\n        primary key (id)\r\n    )"}
{"@timestamp":"2025-06-02T23:25:18.0922592-06:00","level":"INFO","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-06-02T23:25:18.5487093-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* <criteria> */ select\r\n        u1_0.id,\r\n        u1_0.contrasena,\r\n        u1_0.correo,\r\n        u1_0.nombre,\r\n        u1_0.telefono,\r\n        u1_0.tipo,\r\n        u1_0.verificado \r\n    from\r\n        usuarios u1_0 \r\n    where\r\n        u1_0.correo=?"}
{"@timestamp":"2025-06-02T23:25:18.6851202-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* insert for\r\n        com.marketplace.users.entity.Usuario */insert \r\n    into\r\n        usuarios (contrasena, correo, nombre, telefono, tipo, verificado, id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, default)"}
{"@timestamp":"2025-06-02T23:25:18.8713877-06:00","level":"WARN","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning"}
{"@timestamp":"2025-06-02T23:25:19.5059672-06:00","level":"INFO","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 1 endpoint(s) beneath base path '/actuator'"}
{"@timestamp":"2025-06-02T23:25:19.5535138-06:00","level":"INFO","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6b60043f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@194199a7, org.springframework.security.web.context.SecurityContextHolderFilter@3bd61fc1, org.springframework.security.web.header.HeaderWriterFilter@59be243f, org.springframework.web.filter.CorsFilter@701d371a, org.springframework.security.web.authentication.logout.LogoutFilter@66d42472, com.marketplace.users.security.JwtAuthFilter@770d891, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5e604ba6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@40633a27, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58eb3c9c, org.springframework.security.web.access.ExceptionTranslationFilter@1520a34c, org.springframework.security.web.access.intercept.AuthorizationFilter@44a0c049]"}
{"@timestamp":"2025-06-02T23:25:20.0081316-06:00","level":"WARN","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","message":"Unable to start LiveReload server"}
{"@timestamp":"2025-06-02T23:25:20.1872526-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","message":"Eureka HTTP Client uses RestTemplate."}
{"@timestamp":"2025-06-02T23:25:20.2333861-06:00","level":"WARN","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath."}
{"@timestamp":"2025-06-02T23:25:20.2994109-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","message":"Setting initial instance status as: STARTING"}
{"@timestamp":"2025-06-02T23:25:20.3308352-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Initializing Eureka in region us-east-1"}
{"@timestamp":"2025-06-02T23:25:20.3348289-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","message":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2025-06-02T23:25:20.3518305-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Disable delta property : false"}
{"@timestamp":"2025-06-02T23:25:20.3518305-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Single vip registry refresh property : null"}
{"@timestamp":"2025-06-02T23:25:20.3518305-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Force full registry fetch : false"}
{"@timestamp":"2025-06-02T23:25:20.3518305-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Application is null : false"}
{"@timestamp":"2025-06-02T23:25:20.3528379-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Registered Applications size is zero : true"}
{"@timestamp":"2025-06-02T23:25:20.3528379-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Application version is -1: true"}
{"@timestamp":"2025-06-02T23:25:20.3528379-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Getting all instance registry info from the eureka server"}
{"@timestamp":"2025-06-02T23:25:20.6574792-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"The response status is 200"}
{"@timestamp":"2025-06-02T23:25:20.6594636-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Starting heartbeat executor: renew interval is: 30"}
{"@timestamp":"2025-06-02T23:25:20.6624969-06:00","level":"INFO","logger_name":"com.netflix.discovery.InstanceInfoReplicator","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4"}
{"@timestamp":"2025-06-02T23:25:20.6654633-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Discovery Client initialized at timestamp 1748928320665 with initial instances count: 2"}
{"@timestamp":"2025-06-02T23:25:20.6714965-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","message":"Registering application USERS-SERVICE with eureka with status UP"}
{"@timestamp":"2025-06-02T23:25:20.6724651-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Saw local status change event StatusChangeEvent [timestamp=1748928320672, current=UP, previous=STARTING]"}
{"@timestamp":"2025-06-02T23:25:20.6734996-06:00","level":"INFO","logger_name":"org.apache.coyote.http11.Http11NioProtocol","message":"Starting ProtocolHandler [\"http-nio-8081\"]"}
{"@timestamp":"2025-06-02T23:25:20.6734996-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_USERS-SERVICE/192.168.1.134:users-service:8081: registering service..."}
{"@timestamp":"2025-06-02T23:25:20.6974644-06:00","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat started on port 8081 (http) with context path ''"}
{"@timestamp":"2025-06-02T23:25:20.6984839-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","message":"Updating port to 8081"}
{"@timestamp":"2025-06-02T23:25:20.7124704-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_USERS-SERVICE/192.168.1.134:users-service:8081 - registration status: 204"}
{"@timestamp":"2025-06-02T23:25:20.8835801-06:00","level":"INFO","logger_name":"com.marketplace.users.UsersServiceApplication","message":"Started UsersServiceApplication in 7.341 seconds (process running for 13.111)"}
{"@timestamp":"2025-06-02T23:25:21.2632379-06:00","level":"INFO","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'"}
{"@timestamp":"2025-06-02T23:25:21.2632379-06:00","level":"INFO","logger_name":"org.springframework.web.servlet.DispatcherServlet","message":"Initializing Servlet 'dispatcherServlet'"}
{"@timestamp":"2025-06-02T23:25:21.2642314-06:00","level":"INFO","logger_name":"org.springframework.web.servlet.DispatcherServlet","message":"Completed initialization in 1 ms"}
{"@timestamp":"2025-06-02T23:30:05.8261522-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Securing POST /auth/login"}
{"@timestamp":"2025-06-02T23:30:05.8411832-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Secured POST /auth/login"}
{"@timestamp":"2025-06-02T23:30:05.9433436-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* <criteria> */ select\r\n        u1_0.id,\r\n        u1_0.contrasena,\r\n        u1_0.correo,\r\n        u1_0.nombre,\r\n        u1_0.telefono,\r\n        u1_0.tipo,\r\n        u1_0.verificado \r\n    from\r\n        usuarios u1_0 \r\n    where\r\n        u1_0.correo=?"}
{"@timestamp":"2025-06-02T23:30:06.0274377-06:00","level":"DEBUG","logger_name":"org.springframework.security.authentication.dao.DaoAuthenticationProvider","message":"Authenticated user"}
{"@timestamp":"2025-06-02T23:30:06.0590927-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","message":"Set SecurityContextHolder to anonymous SecurityContext"}
{"@timestamp":"2025-06-02T23:30:20.3608384-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","message":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2025-06-02T23:33:36.7630424-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Securing POST /auth/register"}
{"@timestamp":"2025-06-02T23:33:36.7650445-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Secured POST /auth/register"}
{"@timestamp":"2025-06-02T23:33:36.7690419-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* <criteria> */ select\r\n        u1_0.id,\r\n        u1_0.contrasena,\r\n        u1_0.correo,\r\n        u1_0.nombre,\r\n        u1_0.telefono,\r\n        u1_0.tipo,\r\n        u1_0.verificado \r\n    from\r\n        usuarios u1_0 \r\n    where\r\n        u1_0.correo=?"}
{"@timestamp":"2025-06-02T23:33:36.8500791-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* insert for\r\n        com.marketplace.users.entity.Usuario */insert \r\n    into\r\n        usuarios (contrasena, correo, nombre, telefono, tipo, verificado, id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, default)"}
{"@timestamp":"2025-06-02T23:33:36.8551237-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","message":"Set SecurityContextHolder to anonymous SecurityContext"}
{"@timestamp":"2025-06-02T23:34:18.0604645-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Securing POST /auth/register"}
{"@timestamp":"2025-06-02T23:34:18.0624619-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Secured POST /auth/register"}
{"@timestamp":"2025-06-02T23:34:18.0664898-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* <criteria> */ select\r\n        u1_0.id,\r\n        u1_0.contrasena,\r\n        u1_0.correo,\r\n        u1_0.nombre,\r\n        u1_0.telefono,\r\n        u1_0.tipo,\r\n        u1_0.verificado \r\n    from\r\n        usuarios u1_0 \r\n    where\r\n        u1_0.correo=?"}
{"@timestamp":"2025-06-02T23:34:18.0684636-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","message":"Set SecurityContextHolder to anonymous SecurityContext"}
{"@timestamp":"2025-06-02T23:34:34.614396-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Securing POST /auth/register"}
{"@timestamp":"2025-06-02T23:34:34.6153967-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Secured POST /auth/register"}
{"@timestamp":"2025-06-02T23:34:34.6174007-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* <criteria> */ select\r\n        u1_0.id,\r\n        u1_0.contrasena,\r\n        u1_0.correo,\r\n        u1_0.nombre,\r\n        u1_0.telefono,\r\n        u1_0.tipo,\r\n        u1_0.verificado \r\n    from\r\n        usuarios u1_0 \r\n    where\r\n        u1_0.correo=?"}
{"@timestamp":"2025-06-02T23:34:34.6939498-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* insert for\r\n        com.marketplace.users.entity.Usuario */insert \r\n    into\r\n        usuarios (contrasena, correo, nombre, telefono, tipo, verificado, id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, default)"}
{"@timestamp":"2025-06-02T23:34:34.6969163-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","message":"Set SecurityContextHolder to anonymous SecurityContext"}
{"@timestamp":"2025-06-02T23:34:55.8334411-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Securing POST /auth/register"}
{"@timestamp":"2025-06-02T23:34:55.8354098-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Secured POST /auth/register"}
{"@timestamp":"2025-06-02T23:34:55.8374092-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* <criteria> */ select\r\n        u1_0.id,\r\n        u1_0.contrasena,\r\n        u1_0.correo,\r\n        u1_0.nombre,\r\n        u1_0.telefono,\r\n        u1_0.tipo,\r\n        u1_0.verificado \r\n    from\r\n        usuarios u1_0 \r\n    where\r\n        u1_0.correo=?"}
{"@timestamp":"2025-06-02T23:34:55.9205468-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* insert for\r\n        com.marketplace.users.entity.Usuario */insert \r\n    into\r\n        usuarios (contrasena, correo, nombre, telefono, tipo, verificado, id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, default)"}
{"@timestamp":"2025-06-02T23:34:55.9235168-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","message":"Set SecurityContextHolder to anonymous SecurityContext"}
{"@timestamp":"2025-06-02T23:35:20.367831-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","message":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2025-06-02T23:35:56.1154677-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Securing POST /auth/login"}
{"@timestamp":"2025-06-02T23:35:56.1184679-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Secured POST /auth/login"}
{"@timestamp":"2025-06-02T23:35:56.121501-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* <criteria> */ select\r\n        u1_0.id,\r\n        u1_0.contrasena,\r\n        u1_0.correo,\r\n        u1_0.nombre,\r\n        u1_0.telefono,\r\n        u1_0.tipo,\r\n        u1_0.verificado \r\n    from\r\n        usuarios u1_0 \r\n    where\r\n        u1_0.correo=?"}
{"@timestamp":"2025-06-02T23:35:56.1940309-06:00","level":"DEBUG","logger_name":"org.springframework.security.authentication.dao.DaoAuthenticationProvider","message":"Authenticated user"}
{"@timestamp":"2025-06-02T23:35:56.1959911-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","message":"Set SecurityContextHolder to anonymous SecurityContext"}
{"@timestamp":"2025-06-02T23:40:21.7006494-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","message":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2025-06-02T23:41:57.5373307-06:00","level":"INFO","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","message":"Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)"}
{"@timestamp":"2025-06-02T23:41:57.5383408-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","message":"Unregistering application USERS-SERVICE with eureka with status DOWN"}
{"@timestamp":"2025-06-02T23:41:57.5383408-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Saw local status change event StatusChangeEvent [timestamp=1748929317538, current=DOWN, previous=UP]"}
{"@timestamp":"2025-06-02T23:41:57.539307-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_USERS-SERVICE/192.168.1.134:users-service:8081: registering service..."}
{"@timestamp":"2025-06-02T23:41:57.5423417-06:00","level":"INFO","logger_name":"org.apache.coyote.http11.Http11NioProtocol","message":"Stopping ProtocolHandler [\"http-nio-8081\"]"}
{"@timestamp":"2025-06-02T23:41:57.5513085-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_USERS-SERVICE/192.168.1.134:users-service:8081 - registration status: 204"}
{"@timestamp":"2025-06-02T23:41:57.5603071-06:00","level":"INFO","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Closing JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-06-02T23:41:57.5643066-06:00","level":"WARN","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-224]"}
{"@timestamp":"2025-06-02T23:41:57.5653063-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown initiated..."}
{"@timestamp":"2025-06-02T23:41:57.5663097-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown completed."}
{"@timestamp":"2025-06-02T23:41:57.5673101-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Shutting down DiscoveryClient ..."}
{"@timestamp":"2025-06-02T23:42:00.5764518-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Unregistering ..."}
{"@timestamp":"2025-06-02T23:42:00.5795235-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down\r\n\tat org.apache.hc.core5.util.Asserts.check(Asserts.java:38)\r\n\tat org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)\r\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)\r\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\r\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)\r\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\r\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)\r\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)\r\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)\r\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)\r\n\tat org.springframework.boot.devtools.restart.Restarter.stop(Restarter.java:308)\r\n\tat org.springframework.boot.devtools.restart.Restarter.lambda$restart$1(Restarter.java:250)\r\n\tat org.springframework.boot.devtools.restart.Restarter$LeakSafeThread.run(Restarter.java:607)\r\n"}
{"@timestamp":"2025-06-02T23:42:00.5805254-06:00","level":"WARN","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","message":"Request execution failed with message: Connection pool shut down"}
{"@timestamp":"2025-06-02T23:42:00.5834888-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down\r\n\tat org.apache.hc.core5.util.Asserts.check(Asserts.java:38)\r\n\tat org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)\r\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)\r\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\r\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)\r\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\r\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)\r\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)\r\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)\r\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)\r\n\tat org.springframework.boot.devtools.restart.Restarter.stop(Restarter.java:308)\r\n\tat org.springframework.boot.devtools.restart.Restarter.lambda$restart$1(Restarter.java:250)\r\n\tat org.springframework.boot.devtools.restart.Restarter$LeakSafeThread.run(Restarter.java:607)\r\n"}
{"@timestamp":"2025-06-02T23:42:00.5834888-06:00","level":"WARN","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","message":"Request execution failed with message: Connection pool shut down"}
{"@timestamp":"2025-06-02T23:42:00.5844928-06:00","level":"ERROR","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_USERS-SERVICE/192.168.1.134:users-service:8081 - de-registration failedCannot execute request on any known server","stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)\r\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\r\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)\r\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)\r\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)\r\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)\r\n\tat org.springframework.boot.devtools.restart.Restarter.stop(Restarter.java:308)\r\n\tat org.springframework.boot.devtools.restart.Restarter.lambda$restart$1(Restarter.java:250)\r\n\tat org.springframework.boot.devtools.restart.Restarter$LeakSafeThread.run(Restarter.java:607)\r\n"}
{"@timestamp":"2025-06-02T23:42:00.5895251-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Completed shut down of DiscoveryClient"}
{"@timestamp":"2025-06-02T23:42:00.8818201-06:00","level":"INFO","logger_name":"com.marketplace.users.UsersServiceApplication","message":"Starting UsersServiceApplication using Java 17.0.11 with PID 12404 (C:\\Users\\103300781\\Documents\\Abdias_Archivos\\Microservicios\\proyecto1\\microservices-backend\\users-service\\target\\classes started by AbdiasMoralesSalazar in C:\\Users\\103300781\\Documents\\Abdias_Archivos\\Microservicios\\proyecto1\\microservices-backend\\users-service)"}
{"@timestamp":"2025-06-02T23:42:00.8828214-06:00","level":"INFO","logger_name":"com.marketplace.users.UsersServiceApplication","message":"No active profile set, falling back to 1 default profile: \"default\""}
{"@timestamp":"2025-06-02T23:42:01.3127292-06:00","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode."}
{"@timestamp":"2025-06-02T23:42:01.3216928-06:00","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 8 ms. Found 1 JPA repository interface."}
{"@timestamp":"2025-06-02T23:42:01.3958607-06:00","level":"INFO","logger_name":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=cabed883-ec52-3b8f-901a-f3742f5fcd4d"}
{"@timestamp":"2025-06-02T23:42:01.4298277-06:00","level":"WARN","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead."}
{"@timestamp":"2025-06-02T23:42:01.4318291-06:00","level":"WARN","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies."}
{"@timestamp":"2025-06-02T23:42:01.5182536-06:00","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8081 (http)"}
{"@timestamp":"2025-06-02T23:42:01.5192539-06:00","level":"INFO","logger_name":"org.apache.coyote.http11.Http11NioProtocol","message":"Initializing ProtocolHandler [\"http-nio-8081\"]"}
{"@timestamp":"2025-06-02T23:42:01.5192539-06:00","level":"INFO","logger_name":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2025-06-02T23:42:01.5192539-06:00","level":"INFO","logger_name":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/10.1.20]"}
{"@timestamp":"2025-06-02T23:42:01.5442864-06:00","level":"INFO","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2025-06-02T23:42:01.5442864-06:00","level":"INFO","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 660 ms"}
{"@timestamp":"2025-06-02T23:42:01.5932944-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-2 - Starting..."}
{"@timestamp":"2025-06-02T23:42:01.5947993-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA"}
{"@timestamp":"2025-06-02T23:42:01.5947993-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-2 - Start completed."}
{"@timestamp":"2025-06-02T23:42:01.5947993-06:00","level":"INFO","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'"}
{"@timestamp":"2025-06-02T23:42:01.6638058-06:00","level":"INFO","logger_name":"org.hibernate.jpa.internal.util.LogHelper","message":"HHH000204: Processing PersistenceUnitInfo [name: default]"}
{"@timestamp":"2025-06-02T23:42:01.6668078-06:00","level":"INFO","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","message":"HHH000026: Second-level cache disabled"}
{"@timestamp":"2025-06-02T23:42:01.6718417-06:00","level":"INFO","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","message":"No LoadTimeWeaver setup: ignoring JPA class transformer"}
{"@timestamp":"2025-06-02T23:42:01.6728054-06:00","level":"WARN","logger_name":"org.hibernate.orm.deprecation","message":"HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)"}
{"@timestamp":"2025-06-02T23:42:01.7088154-06:00","level":"INFO","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)"}
{"@timestamp":"2025-06-02T23:42:01.7098136-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create table usuarios (\r\n        id bigint generated by default as identity,\r\n        contrasena varchar(255),\r\n        correo varchar(255),\r\n        nombre varchar(255),\r\n        telefono varchar(255),\r\n        tipo varchar(255) not null check (tipo in ('CLIENTE','PROVEEDOR','CREADOR','ADMIN')),\r\n        verificado boolean,\r\n        primary key (id)\r\n    )"}
{"@timestamp":"2025-06-02T23:42:01.710814-06:00","level":"INFO","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-06-02T23:42:01.8099101-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* <criteria> */ select\r\n        u1_0.id,\r\n        u1_0.contrasena,\r\n        u1_0.correo,\r\n        u1_0.nombre,\r\n        u1_0.telefono,\r\n        u1_0.tipo,\r\n        u1_0.verificado \r\n    from\r\n        usuarios u1_0 \r\n    where\r\n        u1_0.correo=?"}
{"@timestamp":"2025-06-02T23:42:01.8974896-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* insert for\r\n        com.marketplace.users.entity.Usuario */insert \r\n    into\r\n        usuarios (contrasena, correo, nombre, telefono, tipo, verificado, id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, default)"}
{"@timestamp":"2025-06-02T23:42:01.9764569-06:00","level":"WARN","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning"}
{"@timestamp":"2025-06-02T23:42:02.3443476-06:00","level":"INFO","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 1 endpoint(s) beneath base path '/actuator'"}
{"@timestamp":"2025-06-02T23:42:02.3673426-06:00","level":"INFO","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@374ec309, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@491807f2, org.springframework.security.web.context.SecurityContextHolderFilter@48df309c, org.springframework.security.web.header.HeaderWriterFilter@39e9b121, org.springframework.web.filter.CorsFilter@71e0838a, org.springframework.security.web.authentication.logout.LogoutFilter@67ec7123, com.marketplace.users.security.JwtAuthFilter@49ff626a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ff8879c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1ab340a0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3ec841c2, org.springframework.security.web.access.ExceptionTranslationFilter@44d36df, org.springframework.security.web.access.intercept.AuthorizationFilter@23fbaa78]"}
{"@timestamp":"2025-06-02T23:42:02.6021679-06:00","level":"WARN","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","message":"Unable to start LiveReload server"}
{"@timestamp":"2025-06-02T23:42:02.7457826-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","message":"Eureka HTTP Client uses RestTemplate."}
{"@timestamp":"2025-06-02T23:42:02.7737829-06:00","level":"WARN","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath."}
{"@timestamp":"2025-06-02T23:42:02.7984307-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","message":"Setting initial instance status as: STARTING"}
{"@timestamp":"2025-06-02T23:42:02.8034017-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Initializing Eureka in region us-east-1"}
{"@timestamp":"2025-06-02T23:42:02.8034017-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","message":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2025-06-02T23:42:02.8113958-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Disable delta property : false"}
{"@timestamp":"2025-06-02T23:42:02.8113958-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Single vip registry refresh property : null"}
{"@timestamp":"2025-06-02T23:42:02.8113958-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Force full registry fetch : false"}
{"@timestamp":"2025-06-02T23:42:02.8113958-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Application is null : false"}
{"@timestamp":"2025-06-02T23:42:02.8113958-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Registered Applications size is zero : true"}
{"@timestamp":"2025-06-02T23:42:02.8113958-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Application version is -1: true"}
{"@timestamp":"2025-06-02T23:42:02.8113958-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Getting all instance registry info from the eureka server"}
{"@timestamp":"2025-06-02T23:42:02.8234255-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"The response status is 200"}
{"@timestamp":"2025-06-02T23:42:02.8243935-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Starting heartbeat executor: renew interval is: 30"}
{"@timestamp":"2025-06-02T23:42:02.8253924-06:00","level":"INFO","logger_name":"com.netflix.discovery.InstanceInfoReplicator","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4"}
{"@timestamp":"2025-06-02T23:42:02.8253924-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Discovery Client initialized at timestamp 1748929322825 with initial instances count: 4"}
{"@timestamp":"2025-06-02T23:42:02.8304259-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","message":"Registering application USERS-SERVICE with eureka with status UP"}
{"@timestamp":"2025-06-02T23:42:02.8304259-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Saw local status change event StatusChangeEvent [timestamp=1748929322830, current=UP, previous=STARTING]"}
{"@timestamp":"2025-06-02T23:42:02.8314041-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_USERS-SERVICE/192.168.1.134:users-service:8081: registering service..."}
{"@timestamp":"2025-06-02T23:42:02.8314041-06:00","level":"INFO","logger_name":"org.apache.coyote.http11.Http11NioProtocol","message":"Starting ProtocolHandler [\"http-nio-8081\"]"}
{"@timestamp":"2025-06-02T23:42:02.8344269-06:00","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat started on port 8081 (http) with context path ''"}
{"@timestamp":"2025-06-02T23:42:02.8353954-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","message":"Updating port to 8081"}
{"@timestamp":"2025-06-02T23:42:02.8393934-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_USERS-SERVICE/192.168.1.134:users-service:8081 - registration status: 204"}
{"@timestamp":"2025-06-02T23:42:02.9789516-06:00","level":"INFO","logger_name":"com.marketplace.users.UsersServiceApplication","message":"Started UsersServiceApplication in 2.313 seconds (process running for 1013.883)"}
{"@timestamp":"2025-06-02T23:42:02.9809522-06:00","level":"INFO","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","message":"Condition evaluation unchanged"}
{"@timestamp":"2025-06-02T23:43:09.5229638-06:00","level":"INFO","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","message":"Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)"}
{"@timestamp":"2025-06-02T23:43:09.5239595-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","message":"Unregistering application USERS-SERVICE with eureka with status DOWN"}
{"@timestamp":"2025-06-02T23:43:09.5239595-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Saw local status change event StatusChangeEvent [timestamp=1748929389523, current=DOWN, previous=UP]"}
{"@timestamp":"2025-06-02T23:43:09.5239595-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_USERS-SERVICE/192.168.1.134:users-service:8081: registering service..."}
{"@timestamp":"2025-06-02T23:43:09.5257823-06:00","level":"INFO","logger_name":"org.apache.coyote.http11.Http11NioProtocol","message":"Stopping ProtocolHandler [\"http-nio-8081\"]"}
{"@timestamp":"2025-06-02T23:43:09.5378439-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/USERS-SERVICE\": Connection is closed stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/USERS-SERVICE\": Connection is closed\r\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.hc.core5.http.ConnectionClosedException: Connection is closed\r\n\tat org.apache.hc.core5.http.impl.io.BHttpConnectionBase.ensureOpen(BHttpConnectionBase.java:102)\r\n\tat org.apache.hc.core5.http.impl.io.DefaultBHttpClientConnection.sendRequestEntity(DefaultBHttpClientConnection.java:193)\r\n\tat org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:141)\r\n\tat org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:218)\r\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$InternalConnectionEndpoint.execute(PoolingHttpClientConnectionManager.java:712)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.execute(InternalExecRuntime.java:216)\r\n\tat org.apache.hc.client5.http.impl.classic.MainClientExec.execute(MainClientExec.java:116)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:188)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\r\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\r\n\t... 21 more\r\n"}
{"@timestamp":"2025-06-02T23:43:09.5388356-06:00","level":"WARN","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/USERS-SERVICE\": Connection is closed"}
{"@timestamp":"2025-06-02T23:43:09.5398357-06:00","level":"INFO","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Closing JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-06-02T23:43:09.5398357-06:00","level":"WARN","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-224]"}
{"@timestamp":"2025-06-02T23:43:09.5408347-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-2 - Shutdown initiated..."}
{"@timestamp":"2025-06-02T23:43:09.5408347-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-2 - Shutdown completed."}
{"@timestamp":"2025-06-02T23:43:09.5408347-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Shutting down DiscoveryClient ..."}
{"@timestamp":"2025-06-02T23:43:09.5428681-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down\r\n\tat org.apache.hc.core5.util.Asserts.check(Asserts.java:38)\r\n\tat org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)\r\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)\r\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\r\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n"}
{"@timestamp":"2025-06-02T23:43:09.5428681-06:00","level":"WARN","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","message":"Request execution failed with message: Connection pool shut down"}
{"@timestamp":"2025-06-02T23:43:09.5428681-06:00","level":"WARN","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_USERS-SERVICE/192.168.1.134:users-service:8081 - registration failed Cannot execute request on any known server","stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n"}
{"@timestamp":"2025-06-02T23:43:09.543878-06:00","level":"WARN","logger_name":"com.netflix.discovery.InstanceInfoReplicator","message":"There was a problem with the instance info replicator","stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n"}
{"@timestamp":"2025-06-02T23:43:09.5448354-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Unregistering ..."}
{"@timestamp":"2025-06-02T23:43:09.5468377-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down\r\n\tat org.apache.hc.core5.util.Asserts.check(Asserts.java:38)\r\n\tat org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)\r\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)\r\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\r\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)\r\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\r\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)\r\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)\r\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)\r\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)\r\n\tat org.springframework.boot.devtools.restart.Restarter.stop(Restarter.java:308)\r\n\tat org.springframework.boot.devtools.restart.Restarter.lambda$restart$1(Restarter.java:250)\r\n\tat org.springframework.boot.devtools.restart.Restarter$LeakSafeThread.run(Restarter.java:607)\r\n"}
{"@timestamp":"2025-06-02T23:43:09.5468377-06:00","level":"WARN","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","message":"Request execution failed with message: Connection pool shut down"}
{"@timestamp":"2025-06-02T23:43:09.5468377-06:00","level":"ERROR","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_USERS-SERVICE/192.168.1.134:users-service:8081 - de-registration failedCannot execute request on any known server","stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)\r\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\r\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)\r\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)\r\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)\r\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)\r\n\tat org.springframework.boot.devtools.restart.Restarter.stop(Restarter.java:308)\r\n\tat org.springframework.boot.devtools.restart.Restarter.lambda$restart$1(Restarter.java:250)\r\n\tat org.springframework.boot.devtools.restart.Restarter$LeakSafeThread.run(Restarter.java:607)\r\n"}
{"@timestamp":"2025-06-02T23:43:09.5498352-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Completed shut down of DiscoveryClient"}
{"@timestamp":"2025-06-02T23:43:09.7759395-06:00","level":"INFO","logger_name":"com.marketplace.users.UsersServiceApplication","message":"Starting UsersServiceApplication using Java 17.0.11 with PID 12404 (C:\\Users\\103300781\\Documents\\Abdias_Archivos\\Microservicios\\proyecto1\\microservices-backend\\users-service\\target\\classes started by AbdiasMoralesSalazar in C:\\Users\\103300781\\Documents\\Abdias_Archivos\\Microservicios\\proyecto1\\microservices-backend\\users-service)"}
{"@timestamp":"2025-06-02T23:43:09.7759395-06:00","level":"INFO","logger_name":"com.marketplace.users.UsersServiceApplication","message":"No active profile set, falling back to 1 default profile: \"default\""}
{"@timestamp":"2025-06-02T23:43:10.0658927-06:00","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode."}
{"@timestamp":"2025-06-02T23:43:10.0728929-06:00","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 6 ms. Found 1 JPA repository interface."}
{"@timestamp":"2025-06-02T23:43:10.1420285-06:00","level":"INFO","logger_name":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=cabed883-ec52-3b8f-901a-f3742f5fcd4d"}
{"@timestamp":"2025-06-02T23:43:10.1680291-06:00","level":"WARN","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead."}
{"@timestamp":"2025-06-02T23:43:10.1690299-06:00","level":"WARN","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies."}
{"@timestamp":"2025-06-02T23:43:10.2406047-06:00","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8081 (http)"}
{"@timestamp":"2025-06-02T23:43:10.2415692-06:00","level":"INFO","logger_name":"org.apache.coyote.http11.Http11NioProtocol","message":"Initializing ProtocolHandler [\"http-nio-8081\"]"}
{"@timestamp":"2025-06-02T23:43:10.2415692-06:00","level":"INFO","logger_name":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2025-06-02T23:43:10.2415692-06:00","level":"INFO","logger_name":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/10.1.20]"}
{"@timestamp":"2025-06-02T23:43:10.2656047-06:00","level":"INFO","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2025-06-02T23:43:10.2656047-06:00","level":"INFO","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 488 ms"}
{"@timestamp":"2025-06-02T23:43:10.3081927-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-3 - Starting..."}
{"@timestamp":"2025-06-02T23:43:10.310209-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-3 - Added connection conn20: url=jdbc:h2:mem:testdb user=SA"}
{"@timestamp":"2025-06-02T23:43:10.310209-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-3 - Start completed."}
{"@timestamp":"2025-06-02T23:43:10.310209-06:00","level":"INFO","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'"}
{"@timestamp":"2025-06-02T23:43:10.3762245-06:00","level":"INFO","logger_name":"org.hibernate.jpa.internal.util.LogHelper","message":"HHH000204: Processing PersistenceUnitInfo [name: default]"}
{"@timestamp":"2025-06-02T23:43:10.3792834-06:00","level":"INFO","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","message":"HHH000026: Second-level cache disabled"}
{"@timestamp":"2025-06-02T23:43:10.3832298-06:00","level":"INFO","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","message":"No LoadTimeWeaver setup: ignoring JPA class transformer"}
{"@timestamp":"2025-06-02T23:43:10.3842653-06:00","level":"WARN","logger_name":"org.hibernate.orm.deprecation","message":"HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)"}
{"@timestamp":"2025-06-02T23:43:10.4142809-06:00","level":"INFO","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)"}
{"@timestamp":"2025-06-02T23:43:10.4152633-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create table usuarios (\r\n        id bigint generated by default as identity,\r\n        contrasena varchar(255),\r\n        correo varchar(255),\r\n        nombre varchar(255),\r\n        telefono varchar(255),\r\n        tipo varchar(255) not null check (tipo in ('CLIENTE','PROVEEDOR','CREADOR','ADMIN')),\r\n        verificado boolean,\r\n        primary key (id)\r\n    )"}
{"@timestamp":"2025-06-02T23:43:10.4162628-06:00","level":"INFO","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-06-02T23:43:10.5008853-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* <criteria> */ select\r\n        u1_0.id,\r\n        u1_0.contrasena,\r\n        u1_0.correo,\r\n        u1_0.nombre,\r\n        u1_0.telefono,\r\n        u1_0.tipo,\r\n        u1_0.verificado \r\n    from\r\n        usuarios u1_0 \r\n    where\r\n        u1_0.correo=?"}
{"@timestamp":"2025-06-02T23:43:10.5829212-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* insert for\r\n        com.marketplace.users.entity.Usuario */insert \r\n    into\r\n        usuarios (contrasena, correo, nombre, telefono, tipo, verificado, id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, default)"}
{"@timestamp":"2025-06-02T23:43:10.6364651-06:00","level":"WARN","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning"}
{"@timestamp":"2025-06-02T23:43:10.9782756-06:00","level":"INFO","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 1 endpoint(s) beneath base path '/actuator'"}
{"@timestamp":"2025-06-02T23:43:10.9988446-06:00","level":"INFO","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@b960934, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5950ee22, org.springframework.security.web.context.SecurityContextHolderFilter@28f80b39, org.springframework.security.web.header.HeaderWriterFilter@14f3f25e, org.springframework.web.filter.CorsFilter@5d787910, org.springframework.security.web.authentication.logout.LogoutFilter@1dc9c460, com.marketplace.users.security.JwtAuthFilter@609bd3f0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@349f2df7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@69d4a76c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b07dd1d, org.springframework.security.web.access.ExceptionTranslationFilter@192ef2dc, org.springframework.security.web.access.intercept.AuthorizationFilter@5480d286]"}
{"@timestamp":"2025-06-02T23:43:11.2092451-06:00","level":"WARN","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","message":"Unable to start LiveReload server"}
{"@timestamp":"2025-06-02T23:43:11.3467671-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","message":"Eureka HTTP Client uses RestTemplate."}
{"@timestamp":"2025-06-02T23:43:11.3708019-06:00","level":"WARN","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath."}
{"@timestamp":"2025-06-02T23:43:11.3923816-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","message":"Setting initial instance status as: STARTING"}
{"@timestamp":"2025-06-02T23:43:11.3963876-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Initializing Eureka in region us-east-1"}
{"@timestamp":"2025-06-02T23:43:11.3963876-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","message":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2025-06-02T23:43:11.3974169-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Disable delta property : false"}
{"@timestamp":"2025-06-02T23:43:11.3974169-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Single vip registry refresh property : null"}
{"@timestamp":"2025-06-02T23:43:11.3974169-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Force full registry fetch : false"}
{"@timestamp":"2025-06-02T23:43:11.3974169-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Application is null : false"}
{"@timestamp":"2025-06-02T23:43:11.3974169-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Registered Applications size is zero : true"}
{"@timestamp":"2025-06-02T23:43:11.3984022-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Application version is -1: true"}
{"@timestamp":"2025-06-02T23:43:11.3984022-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Getting all instance registry info from the eureka server"}
{"@timestamp":"2025-06-02T23:43:11.4113868-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"The response status is 200"}
{"@timestamp":"2025-06-02T23:43:11.4124284-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Starting heartbeat executor: renew interval is: 30"}
{"@timestamp":"2025-06-02T23:43:11.4133861-06:00","level":"INFO","logger_name":"com.netflix.discovery.InstanceInfoReplicator","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4"}
{"@timestamp":"2025-06-02T23:43:11.4143954-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Discovery Client initialized at timestamp 1748929391414 with initial instances count: 4"}
{"@timestamp":"2025-06-02T23:43:11.4184199-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","message":"Registering application USERS-SERVICE with eureka with status UP"}
{"@timestamp":"2025-06-02T23:43:11.4184199-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Saw local status change event StatusChangeEvent [timestamp=1748929391418, current=UP, previous=STARTING]"}
{"@timestamp":"2025-06-02T23:43:11.4184199-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_USERS-SERVICE/192.168.1.134:users-service:8081: registering service..."}
{"@timestamp":"2025-06-02T23:43:11.4193911-06:00","level":"INFO","logger_name":"org.apache.coyote.http11.Http11NioProtocol","message":"Starting ProtocolHandler [\"http-nio-8081\"]"}
{"@timestamp":"2025-06-02T23:43:11.4233873-06:00","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat started on port 8081 (http) with context path ''"}
{"@timestamp":"2025-06-02T23:43:11.4243904-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","message":"Updating port to 8081"}
{"@timestamp":"2025-06-02T23:43:11.4293909-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_USERS-SERVICE/192.168.1.134:users-service:8081 - registration status: 204"}
{"@timestamp":"2025-06-02T23:43:11.5670423-06:00","level":"INFO","logger_name":"com.marketplace.users.UsersServiceApplication","message":"Started UsersServiceApplication in 1.959 seconds (process running for 1082.471)"}
{"@timestamp":"2025-06-02T23:43:11.569011-06:00","level":"INFO","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","message":"Condition evaluation unchanged"}
{"@timestamp":"2025-06-02T23:43:34.7684146-06:00","level":"INFO","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'"}
{"@timestamp":"2025-06-02T23:43:34.7684146-06:00","level":"INFO","logger_name":"org.springframework.web.servlet.DispatcherServlet","message":"Initializing Servlet 'dispatcherServlet'"}
{"@timestamp":"2025-06-02T23:43:34.7704101-06:00","level":"INFO","logger_name":"org.springframework.web.servlet.DispatcherServlet","message":"Completed initialization in 2 ms"}
{"@timestamp":"2025-06-02T23:43:34.7714088-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Securing POST /auth/register"}
{"@timestamp":"2025-06-02T23:43:34.7724088-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Secured POST /auth/register"}
{"@timestamp":"2025-06-02T23:43:34.7754112-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","message":"Set SecurityContextHolder to anonymous SecurityContext"}
{"@timestamp":"2025-06-02T23:44:05.945598-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Securing POST /auth/login"}
{"@timestamp":"2025-06-02T23:44:05.9466014-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Secured POST /auth/login"}
{"@timestamp":"2025-06-02T23:44:06.0212234-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* <criteria> */ select\r\n        u1_0.id,\r\n        u1_0.contrasena,\r\n        u1_0.correo,\r\n        u1_0.nombre,\r\n        u1_0.telefono,\r\n        u1_0.tipo,\r\n        u1_0.verificado \r\n    from\r\n        usuarios u1_0 \r\n    where\r\n        u1_0.correo=?"}
{"@timestamp":"2025-06-02T23:44:06.096346-06:00","level":"DEBUG","logger_name":"org.springframework.security.authentication.dao.DaoAuthenticationProvider","message":"Failed to find user 'admin@email.com'"}
{"@timestamp":"2025-06-02T23:44:06.100366-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","message":"Set SecurityContextHolder to anonymous SecurityContext"}
{"@timestamp":"2025-06-02T23:44:11.80798-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Securing POST /auth/login"}
{"@timestamp":"2025-06-02T23:44:11.8089787-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Secured POST /auth/login"}
{"@timestamp":"2025-06-02T23:44:11.8109815-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* <criteria> */ select\r\n        u1_0.id,\r\n        u1_0.contrasena,\r\n        u1_0.correo,\r\n        u1_0.nombre,\r\n        u1_0.telefono,\r\n        u1_0.tipo,\r\n        u1_0.verificado \r\n    from\r\n        usuarios u1_0 \r\n    where\r\n        u1_0.correo=?"}
{"@timestamp":"2025-06-02T23:44:11.8829777-06:00","level":"DEBUG","logger_name":"org.springframework.security.authentication.dao.DaoAuthenticationProvider","message":"Authenticated user"}
{"@timestamp":"2025-06-02T23:44:11.8869873-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","message":"Set SecurityContextHolder to anonymous SecurityContext"}
{"@timestamp":"2025-06-02T23:44:26.5511683-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Securing POST /usuarios"}
{"@timestamp":"2025-06-02T23:44:26.5652022-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* <criteria> */ select\r\n        u1_0.id,\r\n        u1_0.contrasena,\r\n        u1_0.correo,\r\n        u1_0.nombre,\r\n        u1_0.telefono,\r\n        u1_0.tipo,\r\n        u1_0.verificado \r\n    from\r\n        usuarios u1_0 \r\n    where\r\n        u1_0.correo=?"}
{"@timestamp":"2025-06-02T23:44:26.5690695-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Secured POST /usuarios"}
{"@timestamp":"2025-06-02T23:44:26.5700693-06:00","level":"INFO","logger_name":"com.marketplace.users.controller.UsuarioController","message":"Iniciando creación de usuario con email: dos@email.com"}
{"@timestamp":"2025-06-02T23:44:26.5710691-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* <criteria> */ select\r\n        u1_0.id,\r\n        u1_0.contrasena,\r\n        u1_0.correo,\r\n        u1_0.nombre,\r\n        u1_0.telefono,\r\n        u1_0.tipo,\r\n        u1_0.verificado \r\n    from\r\n        usuarios u1_0 \r\n    where\r\n        u1_0.correo=?"}
{"@timestamp":"2025-06-02T23:44:26.5720702-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* insert for\r\n        com.marketplace.users.entity.Usuario */insert \r\n    into\r\n        usuarios (contrasena, correo, nombre, telefono, tipo, verificado, id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, default)"}
{"@timestamp":"2025-06-02T23:44:26.5720702-06:00","level":"INFO","logger_name":"com.marketplace.users.controller.UsuarioController","message":"Usuario creado exitosamente ID: 2"}
{"@timestamp":"2025-06-02T23:48:11.4035365-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","message":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2025-06-02T23:48:18.1484871-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Securing POST /usuarios"}
{"@timestamp":"2025-06-02T23:48:18.1524852-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* <criteria> */ select\r\n        u1_0.id,\r\n        u1_0.contrasena,\r\n        u1_0.correo,\r\n        u1_0.nombre,\r\n        u1_0.telefono,\r\n        u1_0.tipo,\r\n        u1_0.verificado \r\n    from\r\n        usuarios u1_0 \r\n    where\r\n        u1_0.correo=?"}
{"@timestamp":"2025-06-02T23:48:18.1544854-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Secured POST /usuarios"}
{"@timestamp":"2025-06-02T23:48:18.1554889-06:00","level":"INFO","logger_name":"com.marketplace.users.controller.UsuarioController","message":"Iniciando creación de usuario con email: dos@email.com"}
{"@timestamp":"2025-06-02T23:48:18.1564887-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* <criteria> */ select\r\n        u1_0.id,\r\n        u1_0.contrasena,\r\n        u1_0.correo,\r\n        u1_0.nombre,\r\n        u1_0.telefono,\r\n        u1_0.tipo,\r\n        u1_0.verificado \r\n    from\r\n        usuarios u1_0 \r\n    where\r\n        u1_0.correo=?"}
{"@timestamp":"2025-06-02T23:48:18.1574857-06:00","level":"INFO","logger_name":"com.marketplace.users.controller.UsuarioController","message":"Conflicto Usuario ya registrado: dos@email.com"}
{"@timestamp":"2025-06-02T23:48:30.9075848-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Securing POST /usuarios"}
{"@timestamp":"2025-06-02T23:48:30.9095852-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* <criteria> */ select\r\n        u1_0.id,\r\n        u1_0.contrasena,\r\n        u1_0.correo,\r\n        u1_0.nombre,\r\n        u1_0.telefono,\r\n        u1_0.tipo,\r\n        u1_0.verificado \r\n    from\r\n        usuarios u1_0 \r\n    where\r\n        u1_0.correo=?"}
{"@timestamp":"2025-06-02T23:48:30.9115843-06:00","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","message":"Secured POST /usuarios"}
{"@timestamp":"2025-06-02T23:48:30.9125845-06:00","level":"INFO","logger_name":"com.marketplace.users.controller.UsuarioController","message":"Iniciando creación de usuario con email: uno@email.com"}
{"@timestamp":"2025-06-02T23:48:30.913584-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* <criteria> */ select\r\n        u1_0.id,\r\n        u1_0.contrasena,\r\n        u1_0.correo,\r\n        u1_0.nombre,\r\n        u1_0.telefono,\r\n        u1_0.tipo,\r\n        u1_0.verificado \r\n    from\r\n        usuarios u1_0 \r\n    where\r\n        u1_0.correo=?"}
{"@timestamp":"2025-06-02T23:48:30.913584-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    /* insert for\r\n        com.marketplace.users.entity.Usuario */insert \r\n    into\r\n        usuarios (contrasena, correo, nombre, telefono, tipo, verificado, id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, default)"}
{"@timestamp":"2025-06-02T23:48:30.9145836-06:00","level":"INFO","logger_name":"com.marketplace.users.controller.UsuarioController","message":"Usuario creado exitosamente ID: 3"}
{"@timestamp":"2025-06-02T23:53:11.4121065-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","message":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2025-06-02T23:57:12.0370558-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt\r\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1079)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt\r\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\r\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)\r\n\tat org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)\r\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)\r\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)\r\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\r\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\r\n\t... 22 more\r\n"}
{"@timestamp":"2025-06-02T23:57:12.0380558-06:00","level":"WARN","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt"}
{"@timestamp":"2025-06-02T23:57:12.0510903-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/USERS-SERVICE/192.168.1.134:users-service:8081\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/USERS-SERVICE/192.168.1.134:users-service:8081\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt\r\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:837)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1401)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt\r\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\r\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)\r\n\tat org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)\r\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)\r\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)\r\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\r\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\r\n\t... 19 more\r\n"}
{"@timestamp":"2025-06-02T23:57:12.0510903-06:00","level":"WARN","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/USERS-SERVICE/192.168.1.134:users-service:8081\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt"}
{"@timestamp":"2025-06-02T23:57:12.0670616-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt\r\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1079)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt\r\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\r\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)\r\n\tat org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)\r\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)\r\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)\r\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\r\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\r\n\t... 23 more\r\n"}
{"@timestamp":"2025-06-02T23:57:12.0670616-06:00","level":"WARN","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt"}
{"@timestamp":"2025-06-02T23:57:12.0680948-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_USERS-SERVICE/192.168.1.134:users-service:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1079)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n"}
{"@timestamp":"2025-06-02T23:57:12.0981849-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/USERS-SERVICE/192.168.1.134:users-service:8081\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/USERS-SERVICE/192.168.1.134:users-service:8081\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt\r\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:837)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1401)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt\r\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\r\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)\r\n\tat org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)\r\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)\r\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)\r\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\r\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\r\n\t... 20 more\r\n"}
{"@timestamp":"2025-06-02T23:57:12.0981849-06:00","level":"WARN","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/USERS-SERVICE/192.168.1.134:users-service:8081\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt"}
{"@timestamp":"2025-06-02T23:57:12.0981849-06:00","level":"ERROR","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_USERS-SERVICE/192.168.1.134:users-service:8081 - was unable to send heartbeat!","stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:837)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1401)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n"}
{"@timestamp":"2025-06-02T23:57:13.6465653-06:00","level":"INFO","logger_name":"org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin","message":"Application shutdown requested."}
{"@timestamp":"2025-06-02T23:57:13.6475665-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","message":"Unregistering application USERS-SERVICE with eureka with status DOWN"}
{"@timestamp":"2025-06-02T23:57:13.6485777-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Saw local status change event StatusChangeEvent [timestamp=1748930233648, current=DOWN, previous=UP]"}
{"@timestamp":"2025-06-02T23:57:13.6485777-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_USERS-SERVICE/192.168.1.134:users-service:8081: registering service..."}
{"@timestamp":"2025-06-02T23:57:13.6495653-06:00","level":"INFO","logger_name":"org.apache.coyote.http11.Http11NioProtocol","message":"Stopping ProtocolHandler [\"http-nio-8081\"]"}
{"@timestamp":"2025-06-02T23:57:13.6675635-06:00","level":"INFO","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Closing JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-06-02T23:57:13.6685635-06:00","level":"WARN","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-224]"}
{"@timestamp":"2025-06-02T23:57:13.6685635-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-3 - Shutdown initiated..."}
{"@timestamp":"2025-06-02T23:57:13.6695697-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-3 - Shutdown completed."}
{"@timestamp":"2025-06-02T23:57:13.6695697-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Shutting down DiscoveryClient ..."}
{"@timestamp":"2025-06-02T23:57:13.6775735-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/USERS-SERVICE\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/USERS-SERVICE\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt\r\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt\r\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\r\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)\r\n\tat org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)\r\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)\r\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)\r\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\r\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\r\n\t... 22 more\r\n"}
{"@timestamp":"2025-06-02T23:57:13.6775735-06:00","level":"WARN","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/USERS-SERVICE\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt"}
{"@timestamp":"2025-06-02T23:57:13.6775735-06:00","level":"WARN","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_USERS-SERVICE/192.168.1.134:users-service:8081 - registration failed Cannot execute request on any known server","stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n"}
{"@timestamp":"2025-06-02T23:57:13.6775735-06:00","level":"WARN","logger_name":"com.netflix.discovery.InstanceInfoReplicator","message":"There was a problem with the instance info replicator","stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n"}
{"@timestamp":"2025-06-02T23:57:13.6785866-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Unregistering ..."}
{"@timestamp":"2025-06-02T23:57:13.6815714-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down\r\n\tat org.apache.hc.core5.util.Asserts.check(Asserts.java:38)\r\n\tat org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)\r\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)\r\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\r\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)\r\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\r\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)\r\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)\r\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)\r\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)\r\n\tat org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)\r\n\tat java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)\r\n\tat java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)\r\n\tat java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)\r\n\tat java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)\r\n\tat java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)\r\n\tat java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)\r\n\tat java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)\r\n\tat java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)\r\n\tat java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)\r\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)\r\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)\r\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)\r\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)\r\n\tat java.base/jdk.internal.reflect.GeneratedMethodAccessor49.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)\r\n\tat java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)\r\n\tat java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:712)\r\n\tat java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:399)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n"}
{"@timestamp":"2025-06-02T23:57:13.6815714-06:00","level":"WARN","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","message":"Request execution failed with message: Connection pool shut down"}
{"@timestamp":"2025-06-02T23:57:13.6815714-06:00","level":"ERROR","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_USERS-SERVICE/192.168.1.134:users-service:8081 - de-registration failedCannot execute request on any known server","stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)\r\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\r\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)\r\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)\r\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)\r\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)\r\n\tat org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)\r\n\tat java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)\r\n\tat java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)\r\n\tat java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)\r\n\tat java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)\r\n\tat java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)\r\n\tat java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)\r\n\tat java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)\r\n\tat java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)\r\n\tat java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)\r\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)\r\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)\r\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)\r\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)\r\n\tat java.base/jdk.internal.reflect.GeneratedMethodAccessor49.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)\r\n\tat java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)\r\n\tat java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:712)\r\n\tat java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:399)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n"}
{"@timestamp":"2025-06-02T23:57:13.685105-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Completed shut down of DiscoveryClient"}
