{"@timestamp":"2025-06-02T23:26:09.0500888-06:00","level":"INFO","logger_name":"org.hibernate.validator.internal.util.Version","message":"HV000001: Hibernate Validator 8.0.1.Final"}
{"@timestamp":"2025-06-02T23:26:09.106219-06:00","level":"INFO","logger_name":"com.marketplace.services.ServicesServiceApplication","message":"Starting ServicesServiceApplication using Java 17.0.11 with PID 37308 (C:\\Users\\103300781\\Documents\\Abdias_Archivos\\Microservicios\\proyecto1\\microservices-backend\\services-service\\target\\classes started by AbdiasMoralesSalazar in C:\\Users\\103300781\\Documents\\Abdias_Archivos\\Microservicios\\proyecto1\\microservices-backend\\services-service)"}
{"@timestamp":"2025-06-02T23:26:09.1082186-06:00","level":"INFO","logger_name":"com.marketplace.services.ServicesServiceApplication","message":"No active profile set, falling back to 1 default profile: \"default\""}
{"@timestamp":"2025-06-02T23:26:10.1953784-06:00","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode."}
{"@timestamp":"2025-06-02T23:26:10.320965-06:00","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 119 ms. Found 1 JPA repository interface."}
{"@timestamp":"2025-06-02T23:26:10.5620793-06:00","level":"INFO","logger_name":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=46eefd16-3c5b-3f20-9b3e-1446cbdcd8ec"}
{"@timestamp":"2025-06-02T23:26:10.8054738-06:00","level":"WARN","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead."}
{"@timestamp":"2025-06-02T23:26:10.8084729-06:00","level":"WARN","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies."}
{"@timestamp":"2025-06-02T23:26:11.0341711-06:00","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8082 (http)"}
{"@timestamp":"2025-06-02T23:26:11.0412049-06:00","level":"INFO","logger_name":"org.apache.coyote.http11.Http11NioProtocol","message":"Initializing ProtocolHandler [\"http-nio-8082\"]"}
{"@timestamp":"2025-06-02T23:26:11.0432041-06:00","level":"INFO","logger_name":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2025-06-02T23:26:11.0432041-06:00","level":"INFO","logger_name":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/10.1.20]"}
{"@timestamp":"2025-06-02T23:26:11.108759-06:00","level":"INFO","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2025-06-02T23:26:11.108759-06:00","level":"INFO","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 1954 ms"}
{"@timestamp":"2025-06-02T23:26:11.2242798-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Starting..."}
{"@timestamp":"2025-06-02T23:26:11.4264174-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:servicesdb user=SA"}
{"@timestamp":"2025-06-02T23:26:11.4283834-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Start completed."}
{"@timestamp":"2025-06-02T23:26:11.4374185-06:00","level":"INFO","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:servicesdb'"}
{"@timestamp":"2025-06-02T23:26:11.6314729-06:00","level":"INFO","logger_name":"org.hibernate.jpa.internal.util.LogHelper","message":"HHH000204: Processing PersistenceUnitInfo [name: default]"}
{"@timestamp":"2025-06-02T23:26:11.6804159-06:00","level":"INFO","logger_name":"org.hibernate.Version","message":"HHH000412: Hibernate ORM core version 6.4.4.Final"}
{"@timestamp":"2025-06-02T23:26:11.7199269-06:00","level":"INFO","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","message":"HHH000026: Second-level cache disabled"}
{"@timestamp":"2025-06-02T23:26:11.932139-06:00","level":"INFO","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","message":"No LoadTimeWeaver setup: ignoring JPA class transformer"}
{"@timestamp":"2025-06-02T23:26:11.9681379-06:00","level":"WARN","logger_name":"org.hibernate.orm.deprecation","message":"HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)"}
{"@timestamp":"2025-06-02T23:26:12.6485174-06:00","level":"INFO","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)"}
{"@timestamp":"2025-06-02T23:26:12.6875558-06:00","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create table servicios (\r\n        id bigint generated by default as identity,\r\n        activo boolean,\r\n        categoria varchar(255),\r\n        descripcion varchar(1000),\r\n        precio numeric(38,2) not null,\r\n        titulo varchar(255),\r\n        usuario_id bigint not null,\r\n        primary key (id)\r\n    )"}
{"@timestamp":"2025-06-02T23:26:12.696806-06:00","level":"INFO","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-06-02T23:26:13.0786588-06:00","level":"WARN","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning"}
{"@timestamp":"2025-06-02T23:26:13.1242045-06:00","level":"WARN","logger_name":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","message":"\r\n\r\nUsing generated security password: e3f691ea-e074-4545-b2ee-c072c8c4068a\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n"}
{"@timestamp":"2025-06-02T23:26:13.7483048-06:00","level":"INFO","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 1 endpoint(s) beneath base path '/actuator'"}
{"@timestamp":"2025-06-02T23:26:13.7963714-06:00","level":"INFO","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1baf1268, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6846e4e8, org.springframework.security.web.context.SecurityContextHolderFilter@3518882c, org.springframework.security.web.header.HeaderWriterFilter@f54cdc4, org.springframework.web.filter.CorsFilter@41861964, org.springframework.security.web.authentication.logout.LogoutFilter@5bf97be9, com.marketplace.services.security.JwtAuthFilter@1e5e3147, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@181cafd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@806a687, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4db8b888, org.springframework.security.web.access.ExceptionTranslationFilter@12b4a53d, org.springframework.security.web.access.intercept.AuthorizationFilter@4fad5e7]"}
{"@timestamp":"2025-06-02T23:26:14.3951945-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","message":"Eureka HTTP Client uses RestTemplate."}
{"@timestamp":"2025-06-02T23:26:14.4352229-06:00","level":"WARN","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath."}
{"@timestamp":"2025-06-02T23:26:14.5112082-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","message":"Setting initial instance status as: STARTING"}
{"@timestamp":"2025-06-02T23:26:14.541743-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Initializing Eureka in region us-east-1"}
{"@timestamp":"2025-06-02T23:26:14.5457184-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","message":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2025-06-02T23:26:14.5696837-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Disable delta property : false"}
{"@timestamp":"2025-06-02T23:26:14.5696837-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Single vip registry refresh property : null"}
{"@timestamp":"2025-06-02T23:26:14.5696837-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Force full registry fetch : false"}
{"@timestamp":"2025-06-02T23:26:14.5706841-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Application is null : false"}
{"@timestamp":"2025-06-02T23:26:14.5706841-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Registered Applications size is zero : true"}
{"@timestamp":"2025-06-02T23:26:14.5706841-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Application version is -1: true"}
{"@timestamp":"2025-06-02T23:26:14.5706841-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Getting all instance registry info from the eureka server"}
{"@timestamp":"2025-06-02T23:26:14.9027647-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"The response status is 200"}
{"@timestamp":"2025-06-02T23:26:14.9057658-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Starting heartbeat executor: renew interval is: 30"}
{"@timestamp":"2025-06-02T23:26:14.9097738-06:00","level":"INFO","logger_name":"com.netflix.discovery.InstanceInfoReplicator","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4"}
{"@timestamp":"2025-06-02T23:26:14.9147684-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Discovery Client initialized at timestamp 1748928374914 with initial instances count: 3"}
{"@timestamp":"2025-06-02T23:26:14.9207638-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","message":"Registering application SERVICES-SERVICE with eureka with status UP"}
{"@timestamp":"2025-06-02T23:26:14.9217639-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Saw local status change event StatusChangeEvent [timestamp=1748928374921, current=UP, previous=STARTING]"}
{"@timestamp":"2025-06-02T23:26:14.9227652-06:00","level":"INFO","logger_name":"org.apache.coyote.http11.Http11NioProtocol","message":"Starting ProtocolHandler [\"http-nio-8082\"]"}
{"@timestamp":"2025-06-02T23:26:14.9227652-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_SERVICES-SERVICE/192.168.1.134:services-service:8082: registering service..."}
{"@timestamp":"2025-06-02T23:26:14.9464061-06:00","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat started on port 8082 (http) with context path ''"}
{"@timestamp":"2025-06-02T23:26:14.9474065-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","message":"Updating port to 8082"}
{"@timestamp":"2025-06-02T23:26:14.9564047-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_SERVICES-SERVICE/192.168.1.134:services-service:8082 - registration status: 204"}
{"@timestamp":"2025-06-02T23:26:15.1325614-06:00","level":"INFO","logger_name":"com.marketplace.services.ServicesServiceApplication","message":"Started ServicesServiceApplication in 6.903 seconds (process running for 7.619)"}
{"@timestamp":"2025-06-02T23:26:15.3810822-06:00","level":"INFO","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'"}
{"@timestamp":"2025-06-02T23:26:15.3810822-06:00","level":"INFO","logger_name":"org.springframework.web.servlet.DispatcherServlet","message":"Initializing Servlet 'dispatcherServlet'"}
{"@timestamp":"2025-06-02T23:26:15.3830806-06:00","level":"INFO","logger_name":"org.springframework.web.servlet.DispatcherServlet","message":"Completed initialization in 2 ms"}
{"@timestamp":"2025-06-02T23:31:14.5820702-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","message":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2025-06-02T23:36:15.9113606-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","message":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2025-06-02T23:41:15.924756-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","message":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2025-06-02T23:46:15.9372134-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","message":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2025-06-02T23:51:15.9473504-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","message":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2025-06-02T23:56:15.9498602-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","message":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2025-06-02T23:57:12.1491869-06:00","level":"INFO","logger_name":"org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin","message":"Application shutdown requested."}
{"@timestamp":"2025-06-02T23:57:12.1502006-06:00","level":"INFO","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","message":"Unregistering application SERVICES-SERVICE with eureka with status DOWN"}
{"@timestamp":"2025-06-02T23:57:12.1502006-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Saw local status change event StatusChangeEvent [timestamp=1748930232150, current=DOWN, previous=UP]"}
{"@timestamp":"2025-06-02T23:57:12.1511882-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_SERVICES-SERVICE/192.168.1.134:services-service:8082: registering service..."}
{"@timestamp":"2025-06-02T23:57:12.1561868-06:00","level":"INFO","logger_name":"org.apache.coyote.http11.Http11NioProtocol","message":"Stopping ProtocolHandler [\"http-nio-8082\"]"}
{"@timestamp":"2025-06-02T23:57:12.1642073-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/SERVICES-SERVICE\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/SERVICES-SERVICE\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt\r\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt\r\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\r\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)\r\n\tat org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)\r\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)\r\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)\r\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\r\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\r\n\t... 21 more\r\n"}
{"@timestamp":"2025-06-02T23:57:12.1651868-06:00","level":"WARN","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/SERVICES-SERVICE\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt"}
{"@timestamp":"2025-06-02T23:57:12.1741957-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/SERVICES-SERVICE\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/SERVICES-SERVICE\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt\r\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt\r\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\r\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)\r\n\tat org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)\r\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)\r\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)\r\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\r\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\r\n\t... 22 more\r\n"}
{"@timestamp":"2025-06-02T23:57:12.1751897-06:00","level":"WARN","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/SERVICES-SERVICE\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: getsockopt"}
{"@timestamp":"2025-06-02T23:57:12.1751897-06:00","level":"WARN","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_SERVICES-SERVICE/192.168.1.134:services-service:8082 - registration failed Cannot execute request on any known server","stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n"}
{"@timestamp":"2025-06-02T23:57:12.1782232-06:00","level":"WARN","logger_name":"com.netflix.discovery.InstanceInfoReplicator","message":"There was a problem with the instance info replicator","stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n"}
{"@timestamp":"2025-06-02T23:57:12.1792258-06:00","level":"INFO","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Closing JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-06-02T23:57:12.1811904-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown initiated..."}
{"@timestamp":"2025-06-02T23:57:12.1833849-06:00","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown completed."}
{"@timestamp":"2025-06-02T23:57:12.1833849-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Shutting down DiscoveryClient ..."}
{"@timestamp":"2025-06-02T23:57:15.1884167-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Unregistering ..."}
{"@timestamp":"2025-06-02T23:57:15.1944169-06:00","level":"INFO","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down\r\n\tat org.apache.hc.core5.util.Asserts.check(Asserts.java:38)\r\n\tat org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)\r\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)\r\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\r\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)\r\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\r\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)\r\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)\r\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)\r\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)\r\n\tat org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)\r\n\tat java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)\r\n\tat java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)\r\n\tat java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)\r\n\tat java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)\r\n\tat java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)\r\n\tat java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)\r\n\tat java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)\r\n\tat java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)\r\n\tat java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)\r\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)\r\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)\r\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)\r\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)\r\n\tat java.base/jdk.internal.reflect.GeneratedMethodAccessor50.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)\r\n\tat java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)\r\n\tat java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:712)\r\n\tat java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:399)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n"}
{"@timestamp":"2025-06-02T23:57:15.1954152-06:00","level":"WARN","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","message":"Request execution failed with message: Connection pool shut down"}
{"@timestamp":"2025-06-02T23:57:15.1954152-06:00","level":"ERROR","logger_name":"com.netflix.discovery.DiscoveryClient","message":"DiscoveryClient_SERVICES-SERVICE/192.168.1.134:services-service:8082 - de-registration failedCannot execute request on any known server","stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)\r\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\r\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)\r\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)\r\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)\r\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)\r\n\tat org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)\r\n\tat java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)\r\n\tat java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)\r\n\tat java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)\r\n\tat java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)\r\n\tat java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)\r\n\tat java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)\r\n\tat java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)\r\n\tat java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)\r\n\tat java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)\r\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)\r\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)\r\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)\r\n\tat java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)\r\n\tat java.base/jdk.internal.reflect.GeneratedMethodAccessor50.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)\r\n\tat java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)\r\n\tat java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:712)\r\n\tat java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:399)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n"}
{"@timestamp":"2025-06-02T23:57:15.2024165-06:00","level":"INFO","logger_name":"com.netflix.discovery.DiscoveryClient","message":"Completed shut down of DiscoveryClient"}
